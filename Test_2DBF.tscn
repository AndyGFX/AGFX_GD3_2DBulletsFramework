[gd_scene load_steps=5 format=2]

[ext_resource path="res://Test_2DBF.gd" type="Script" id=1]
[ext_resource path="res://Prefabs/Enemy/Enemy.tscn" type="PackedScene" id=2]
[ext_resource path="res://Prefabs/BF_Emitter/BF_Emitter.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


export (PackedScene) var projectilePrefab
export (float) var fireDelay = 0.5
export (bool) var fireAtOnce = true

var fireIsEnabled:bool = true

# set group
const TYPE:String = \"BULLET_EMITTER\"

var origins:Array
var sequenceEnabled:bool=false
var currentTime:float = 0
var currentOrigin:int = 0
var container:Node2D

func _ready():
	
	# set node group
	add_to_group(TYPE)
	
	# get all assigned origins
	var count = self.get_child_count()
	for i in range(count):
		var origin = self.get_child(i)
		if origin.is_in_group(\"BULLET_ORIGIN\"):
			self.origins.append(origin)
	pass

# -------------------------------------------------------
# Preview emitter setup in scene
# -------------------------------------------------------
func PreviewInScene(state:bool)->void:
	for i in range(self.origins.size()):
		self.origins[i].previewInScene = state

func SetProjectileSceneContainer(container:Node2D)->void:
	self.container = container
	
# -------------------------------------------------------
# Fire 
# -------------------------------------------------------
func Fire()->void:
	
	if !self.fireIsEnabled: return
	
	if self.fireAtOnce:
		self._FireAtOnce()
		self.fireIsEnabled = true
	else:
		self._FirePerOrigin()
	pass

# -------------------------------------------------------
# Procesing fire per projectile origin (sequenced)
# -------------------------------------------------------
func _process(delta):
	if self.sequenceEnabled:
		self.currentTime += delta
		if self.currentTime>=self.fireDelay:
			self.currentTime = 0
			self._FireFromOrigin(self.currentOrigin)
			self.currentOrigin +=1
			if self.currentOrigin>=self.origins.size():
				self.currentOrigin = 0
				self.sequenceEnabled = false
				self.fireIsEnabled = true
			pass
		
	pass
# -------------------------------------------------------
# HELPERS
# -------------------------------------------------------
func _FireAtOnce()->void:
	self.fireIsEnabled = false
	for i in range(self.origins.size()):
		self._FireFromOrigin(i)
	self.fireIsEnabled = true
	pass
	
func _FirePerOrigin()->void:
	self.currentOrigin = 0
	self.currentTime = 0
	self.sequenceEnabled = true
	self.fireIsEnabled = false
	pass
	
func _FireFromOrigin(id:int)-> void:
	
	var bullet = self.projectilePrefab.instance() 	
	
	bullet.set_global_transform(self.origins[id].get_global_transform())
	
	bullet.set_position(self.origins[id].get_global_position())	
	var currentOriginAngle:float = self.origins[id].GetAngle()
	var newFireAngle:float = rad2deg(self.get_rotation()) + currentOriginAngle + rand_range(-self.origins[id].dispersion,self.origins[id].dispersion)
	
	bullet.SetFireDirectionFromAngle(newFireAngle)
	
	self.container.add_child(bullet)
	pass

"

[node name="Test_2DBF" type="Node2D"]
script = ExtResource( 1 )

[node name="Enemy" parent="." instance=ExtResource( 2 )]
position = Vector2( 34, 257 )

[node name="Enemy2" parent="." instance=ExtResource( 2 )]
position = Vector2( 255, 270 )

[node name="Enemy3" parent="." instance=ExtResource( 2 )]
position = Vector2( 134, 237 )

[node name="Enemy4" parent="." instance=ExtResource( 2 )]
position = Vector2( 327, 247 )

[node name="BF_Emitter_1" parent="." instance=ExtResource( 3 )]
position = Vector2( 73, 78 )
rotation = 1.5708
fireDelay = 0.1

[node name="BF_Emitter_2" parent="." instance=ExtResource( 3 )]
position = Vector2( 290, 83 )
rotation = 1.5708
script = SubResource( 1 )
fireDelay = 0.2
fireAtOnce = false

[node name="Button_1" type="Button" parent="."]
margin_left = 12.3202
margin_top = 14.3735
margin_right = 122.32
margin_bottom = 34.3735
text = "Fire #1"

[node name="CONTAINER" type="Node2D" parent="."]

[node name="Button_2" type="Button" parent="."]
margin_left = 224.0
margin_top = 13.0
margin_right = 334.0
margin_bottom = 33.0
text = "Fire #2"
[connection signal="pressed" from="Button_1" to="." method="_on_Button_1_pressed"]
[connection signal="pressed" from="Button_2" to="." method="_on_Button_2_pressed"]
